#参考www.pygame.org/docs
import pygame,sys,time
from pygame.locals import *
from random import randint

class TankMain():  #坦克大战 主界面 
    width=600
    height=500
    my_tank = None
    my_tank_missile_list = []
    ene_list = []
    def startGame(self):#开始游戏的方法
        pygame.init()
        #创建屏幕大小（宽，高），特性(0,R,F),颜色位
        screem = pygame.display.set_mode((TankMain.width,TankMain.height),0,32)
        #标题
        pygame.display.set_caption("坦克大战")
        TankMain.my_tank = My_Tank(screem)#我坦克显示在中下部
        
        for i in range(1,6):
            TankMain.ene_list.append(Ene_Tank(screem))
        while True:
            #背景色color RGB
            screem.fill((0,0,0))
            screem.blit(self.write_text(),(2,5))
            self.get_event(TankMain.my_tank)#获取事件，根据获取处理
            TankMain.my_tank.display()#显示我方坦克
            TankMain.my_tank.move()#用移动的方法移动坦克
            #发射炮弹
            for ene in TankMain.ene_list:#显示和移动敌方坦克
                ene.display()
                ene.random_move()
            for m in TankMain.my_tank_missile_list: # 显示我方发射炮弹
                m.display()
                m.move()
            time.sleep(0.05)
            #显示重置
            pygame.display.update()

    def get_event(self,my_tank):#获取事件
        for event in pygame.event.get():
            if event.type == QUIT:
                self.stopGame()#右上角退出
            if event.type == KEYDOWN:
                if event.key == K_LEFT:
                    my_tank.direction="L"
                    #my_tank.move()
                    my_tank.stop = False
                if event.key == K_RIGHT:
                    my_tank.direction="R"
                    #my_tank.move()
                    my_tank.stop = False
                if event.key == K_UP:
                    my_tank.direction="U"
                    #my_tank.move()
                    my_tank.stop = False
                if event.key == K_DOWN:
                    my_tank.direction="D"
                    #my_tank.move()
                    my_tank.stop = False
                if event.key == K_ESCAPE:#ESC退出
                    self.stopGame()
                if event.key == K_SPACE:
                    TankMain.my_tank_missile_list.append(my_tank.fire())
            if event.type == KEYUP:
                if event.key == K_LEFT or event.key == K_RIGHT or event.key == K_UP or event.key == K_DOWN:
                    my_tank.stop = True
    def write_text(self):
        font = pygame.font.SysFont("隶书",20)
        text_sf = font.render("敌方坦克为：6，我方坦克为：1",True,(255,0,0))
        return text_sf
    def stopGame(self):#停止游戏
        sys.exit()    

class BaseItem(pygame.sprite.Sprite):
    def __init__(self,screem):
        pygame.sprite.Sprite.__init__(self)
        #所有对象共享的功能属性
        self.screem=screem#坦克使用游戏屏幕窗口
    def display(self):
        if self.live:
            self.image=self.images[self.direction]
            self.screem.blit(self.image,self.rect)#使用边界画出坦克
class Tank(BaseItem): 
    #定义类属性宽和高
    width=50
    height=50
    def __init__(self,screem,left,top):
        super().__init__(screem)
        self.direction="U"#坦克默认方向
        self.speed=5#tank移动速度
        self.stop = False
        self.images={}#坦克所有图片
        self.images["L"]=pygame.image.load("images/tankL.gif")
        self.images["R"]=pygame.image.load("images/tankR.gif")
        self.images["U"]=pygame.image.load("images/tankU.gif")
        self.images["D"]=pygame.image.load("images/tankD.gif")
        self.image=self.images[self.direction]#坦克图片由方向决定
        self.rect=self.image.get_rect()#图片边界（坦克）
        self.rect.left=left
        #self.rect.right=right
        self.rect.top=top
        #self.rect.bottom=bottom
        self.live=True#坦克状态活着
        
    def display(self):#吧坦克显示在游戏窗口上
        self.image=self.images[self.direction]
        self.screem.blit(self.image,self.rect)#使用边界画出坦克
    def move(self):#移动我方坦克的方法
        if not self.stop:#如果不是停止状态
            if self.direction=="L":#如果方向向左，只需要left减小，移动
                if self.rect.left>0:
                    self.rect.left-=self.speed
                else:
                    self.rect.left=0
            elif self.direction=="R":
                if self.rect.right < TankMain.width:
                    self.rect.right+=self.speed
                else:
                    self.rect.right=TankMain.width
            elif self.direction=="U":
                if self.rect.top>0:
                    self.rect.top-=self.speed
                else:
                    self.rect.top=0
            elif self.direction=="D":
                if self.rect.bottom < TankMain.height:
                    self.rect.bottom+=self.speed
                else:
                    self.rect.bottom=TankMain.height
    def fire(self):
        m = Missile(self.screem,self)
        return m

class My_Tank(Tank):#我方坦克类，继承坦克
    def __init__(self,screem):
        super().__init__(screem,275,450)#我坦克显示在中下部
        self.stop=True#默认坦克静止
    

class Ene_Tank(Tank):#敌方坦克类，继承坦克
    def __init__(self,screem):
        super().__init__(screem,randint(1,5)*100,100)#敌方坦克显示在上部
        self.speed=4
        self.step=20
        self.get_random_direction()
    def get_random_direction(self):
        r = randint(1,5)
        if r == 5:
            self.stop=True
        elif r == 4:
            self.direction="L"
            self.stop =False
        elif r == 1:
            self.direction="R"
            self.stop =False
        elif r == 2:
            self.direction="U"
            self.stop =False
        elif r == 3:
            self.direction="D"
            self.stop =False
    #移动6步才能改变方法
    def random_move(self):
        if self.live:
            if self.step==0:
                self.get_random_direction()
                self.step=20
            else:
                self.move()
                self.step -= 1

class Missile(BaseItem):
    width=12
    height=12
    def __init__(self,screem,tank):
        super().__init__(screem)
        self.tank=tank
        self.direction=tank.direction#炮弹方向和坦克方向一样
        self.speed=15#tank移动速度
        self.stop = False
        self.images={}#坦克所有图片
        self.images["L"]=pygame.image.load("images/missileL.gif")
        self.images["R"]=pygame.image.load("images/missileR.gif")
        self.images["U"]=pygame.image.load("images/missileU.gif")
        self.images["D"]=pygame.image.load("images/missileD.gif")
        self.image=self.images[self.direction]#炮弹图片由方向决定
        self.rect=self.image.get_rect()#图片边界（坦克）
        self.rect.left=tank.rect.left+(tank.width-self.width)/2
        #self.rect.right=right
        self.rect.top=tank.rect.top+(tank.height-self.height)/2
        #self.rect.bottom=bottom
        self.live=True#炮弹状态活着
    def move(self):#移动炮弹的方法
        if not self.stop:#如果不是停止状态
            if self.direction=="L":#如果方向向左，只需要left减小，移动
                if self.rect.left>0:#判断是否在屏幕左边界
                    self.rect.left-=self.speed
                else:
                    self.live=False
            elif self.direction=="R":#如果方向向右，right增加
                if self.rect.right < TankMain.width:
                    self.rect.right+=self.speed
                else:
                    self.live=False
            elif self.direction=="U":
                if self.rect.top>0:
                    self.rect.top-=self.speed
                else:
                    self.live=False
            elif self.direction=="D":
                if self.rect.bottom < TankMain.height:
                    self.rect.bottom+=self.speed
                else:
                    self.live=False

   
game = TankMain()
game.startGame()